# Docker Compose configuration with health checks
# Requires Docker Compose v2.13+ for --wait, --wait-timeout, and service health conditions
# Health checks ensure services are fully operational before considering deployment complete
# Deployment uses 5-minute timeout to prevent indefinite hangs

services:
    web:
        build: .
        restart: always
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=production
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB} # Connect to DB container
            - NEXT_PUBLIC_BASE_URL=https://matkassen.org # Production base URL
            - HELLO_SMS_API_URL=https://api.hellosms.se/api/v1/sms/send # HelloSMS API endpoint
            - HELLO_SMS_FROM=Matkassen # SMS sender name
            - HELLO_SMS_TEST_MODE=true # Production mode - keep SMS in test mode (no real SMS sent)
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
        networks:
            - my_network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        logging:
            options:
                max-size: "10m"
                max-file: "3"

    db:
        # Using specific PostgreSQL version for reproducible builds
        # postgres:17.5 is the latest stable release with security updates
        image: postgres:17.5
        restart: always
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - my_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        logging:
            options:
                max-size: "10m"
                max-file: "3"

volumes:
    postgres_data:

networks:
    my_network:
        name: my_network
        driver: bridge
