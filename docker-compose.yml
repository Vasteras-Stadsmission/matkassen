services:
    web:
        build: .
        restart: always
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=production
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
        networks:
            - my_network
        volumes:
            - ./app:/usr/src/app
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    db:
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - my_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

volumes:
    postgres_data:

networks:
    my_network:
        name: my_network
        driver: bridge
