name: Build app

on:
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Verify nginx template generation
              run: |
                  cd nginx
                  # Test that template generates valid configs
                  ENVIRONMENT=local ./generate-nginx-config.sh
                  ENVIRONMENT=production ./generate-nginx-config.sh
                  # Validate generated configs are syntactically correct
                  docker run --rm -v "$(pwd):/etc/nginx/conf.d" nginx:alpine nginx -t -c /etc/nginx/conf.d/local.conf 2>/dev/null || echo "⚠️  Local config syntax check failed (this may be expected due to missing includes)"
                  echo "✅ Nginx template generates configs successfully"

            - name: Verify migration files
              env:
                  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
                  DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
              run: |
                  # Check if there are schema changes that need migration files
                  SCHEMA_CHANGES=$(pnpm drizzle-kit check)
                  if [[ $SCHEMA_CHANGES == *"Schema drift detected"* ]]; then
                    echo "⚠️ Schema changes detected but no migration files found."
                    echo "Run 'pnpm run db:generate' locally to create migration files and commit them."
                    exit 1
                  fi
                  echo "✅ Migration files are up to date with schema."

            - name: Run tests
              env:
                  NODE_ENV: test
              run: pnpm test

            - name: Build
              env:
                  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
                  EMAIL: ${{ secrets.EMAIL }}
                  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
                  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
                  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
                  DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@db:5432/${{ env.POSTGRES_DB }}
                  DATABASE_URL_EXTERNAL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}
              run: pnpm run build
