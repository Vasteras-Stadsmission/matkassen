name: Continuous Deployment

on:
    push:
        branches: [main]

jobs:
    deploy-to-staging:
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to staging
              uses: appleboy/ssh-action@v1.2.2
              with:
                  host: ${{ secrets.SERVER_HOST_STAGING }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  script: |
                      echo "Export GitHub secrets into environment variables"
                      export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
                      export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
                      export POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
                      export EMAIL="${{ secrets.EMAIL }}"
                      export AUTH_GITHUB_ID="${{ secrets.AUTH_GITHUB_ID }}"
                      export AUTH_GITHUB_SECRET="${{ secrets.AUTH_GITHUB_SECRET }}"
                      export AUTH_SECRET="${{ secrets.AUTH_SECRET }}"
                      export DOMAIN_NAME="staging.matkassen.org"

                      APP_DIR=~/matkassen
                      if [ -d "$APP_DIR" ]; then
                          echo "Pulling latest changes from the repository..."
                          cd $APP_DIR
                          echo "Discarding any local changes..."
                          git reset --hard HEAD
                          git clean -fd
                          git pull origin main

                          # Make sure update script is executable
                          chmod +x update.sh

                          # Run the update.sh script which will apply migrations
                          ./update.sh

                          # Check migration status
                          if ! docker compose logs migration | grep "Migrations completed successfully"; then
                              echo "⚠️ Warning: Migrations may not have completed successfully. Check logs."
                          else
                              echo "✅ Database migrations applied successfully"
                          fi
                      else
                          echo "App directory not found"
                          exit 1
                      fi

    manual-deploy-to-production:
        needs: deploy-to-staging
        environment: production
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to production
              uses: appleboy/ssh-action@v1.2.2
              with:
                  host: ${{ secrets.SERVER_HOST_PRODUCTION }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  script: |
                      echo "Export GitHub secrets into environment variables"
                      export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
                      export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
                      export POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
                      export EMAIL="${{ secrets.EMAIL }}"
                      export AUTH_GITHUB_ID="${{ secrets.AUTH_GITHUB_ID }}"
                      export AUTH_GITHUB_SECRET="${{ secrets.AUTH_GITHUB_SECRET }}"
                      export AUTH_SECRET="${{ secrets.AUTH_SECRET }}"
                      export DOMAIN_NAME="matkassen.org"

                      APP_DIR=~/matkassen
                      if [ -d "$APP_DIR" ]; then
                          echo "Pulling latest changes from the repository..."
                          cd $APP_DIR
                          echo "Discarding any local changes..."
                          git reset --hard HEAD
                          git clean -fd
                          git pull origin main

                          # Make sure update script is executable
                          chmod +x update.sh

                          # Run the update.sh script which will apply migrations
                          ./update.sh

                          # Check migration status
                          if ! docker compose logs migration | grep "Migrations completed successfully"; then
                              echo "⚠️ Warning: Migrations may not have completed successfully. Check logs."
                          else
                              echo "✅ Database migrations applied successfully"
                          fi
                      else
                          echo "App directory not found"
                          exit 1
                      fi
